
		// //this.app.metadataCache.resolvedLinks 在 Obsidian 中主要用于解析内部链接（即 Vault 内部的文件链接），而不适用于外部链接（如 HTTP/HTTPS 链接）。遍历所有的文档速度太慢，需要优化。
		// menu.addItem((item: MenuItem) =>
		// 	item
		// 		.setIcon("trash-2")
		// 		.setTitle("Clear file and link")
		// 		.onClick(async () => {
		// 			const editor = this.app.workspace.getActiveViewOfType(MarkdownView)?.editor;
		// 			if (!editor) {
		// 				new Notice('未找到活动编辑器');
		// 				return;
		// 			}

		// 			const doc = editor.getDoc();
		// 			const lineCount = doc.lineCount();
		// 			let linkCountInCurrentDoc = 0;
		// 			const id = "M5U4IDJGU4PSE.info"; // 仅匹配 ID

		// 			// 检查当前文档中链接的出现次数
		// 			for (let line = 0; line < lineCount; line++) {
		// 				const lineText = doc.getLine(line);
		// 				const regex = new RegExp(id, 'g');
		// 				if (regex.test(lineText)) {
		// 					linkCountInCurrentDoc++;
		// 				}
		// 			}

		// 			if (linkCountInCurrentDoc > 1) {
		// 				// 如果链接在当前文档中出现多次，仅删除当前选中的链接
		// 				for (let line = 0; line < lineCount; line++) {
		// 					const lineText = doc.getLine(line);
		// 					const regex = new RegExp(id, 'g');
		// 					const match = regex.exec(lineText);

		// 					if (match) {
		// 						const from = { line: line, ch: match.index };
		// 						const to = { line: line, ch: match.index + match[0].length };
		// 						doc.replaceRange('', from, to);
		// 						new Notice('链接已删除');
		// 						return;
		// 					}
		// 				}
		// 			} else {
		// 				// 手动遍历所有 Markdown 文件，检查 ID
		// 				const allFiles = this.app.vault.getMarkdownFiles();
		// 				let linkFoundElsewhere = false;

		// 				for (const file of allFiles) {
		// 					const content = await this.app.vault.read(file);
		// 					const regex = new RegExp(id, 'g');
		// 					if (regex.test(content)) {
		// 						linkFoundElsewhere = true;
		// 						break;
		// 					}
		// 				}

		// 				if (linkFoundElsewhere) {
		// 					// 仅删除当前文档中的链接
		// 					for (let line = 0; line < lineCount; line++) {
		// 						const lineText = doc.getLine(line);
		// 						const regex = new RegExp(id, 'g');
		// 						const match = regex.exec(lineText);

		// 						if (match) {
		// 							const from = { line: line, ch: match.index };
		// 							const to = { line: line, ch: match.index + match[0].length };
		// 							doc.replaceRange('', from, to);
		// 							new Notice('链接已删除，其余文档依旧引用该图片');
		// 							return;
		// 						}
		// 					}
		// 				} else {
		// 					// 删除源文件
		// 					const data = { "itemIds": [id] }; // 将 id 放入数组中

		// 					const requestOptions: RequestInit = {
		// 						method: 'POST',
		// 						body: JSON.stringify(data),
		// 						redirect: 'follow'
		// 					};

		// 					fetch("http://localhost:41595/api/item/moveToTrash", requestOptions)
		// 						.then(response => response.json())
		// 						.then(result => {
		// 							console.log(result);
		// 							new Notice('文件已删除');
		// 						})
		// 						.catch(error => {
		// 							console.log('error', error);
		// 							new Notice('删除文件时出错');
		// 						});
		// 				}
		// 			}
		// 		})
		// );
